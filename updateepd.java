
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.time.LocalDate;
import java.time.Period;
import java.util.regex.Pattern;
import javax.print.DocFlavor;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author dilpreet
 */
public class updateepd extends javax.swing.JFrame {

    /**
     * Creates new form updateepd
     */
       int set1=0;
    int set2=0;
    int set3=0;
    int count=0;
    String empdata1="";
    String empdata2="";
    String empdata3="";
    String empdata4="";
    int d=0;
  
     String emp1[]=new String[3];
    String emp2[]=new String[3];
    String emp3[]=new String[3];
    String h1;
    public updateepd() {
        initComponents();
    }
    clscon obj=new clscon();
      private static Pattern DATE_PATTERN = Pattern.compile( "^\\d{2}-\\d{2}-\\d{4}$");

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        ei = new javax.swing.JTextField();
        nm = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        photo = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        d1 = new javax.swing.JTextField();
        d2 = new javax.swing.JTextField();
        d3 = new javax.swing.JTextField();
        s1 = new javax.swing.JTextField();
        s2 = new javax.swing.JTextField();
        s3 = new javax.swing.JTextField();
        n1 = new javax.swing.JTextField();
        n2 = new javax.swing.JTextField();
        n3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        a3 = new javax.swing.JTextField();
        a2 = new javax.swing.JTextField();
        a1 = new javax.swing.JTextField();
        snotofication = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel1.setText("Employee Personal detail");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Emp Id");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Address");

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        ei.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                eiFocusLost(evt);
            }
        });

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(photo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(photo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
        );

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Name & Address of");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Nomiee(s)");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Date of Birth");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Name & address of Person who may receive the said amount");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Nomination");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("(in case of minor)");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Share of ");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("during the minority of the nominee(s)");

        d1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                d1FocusLost(evt);
            }
        });
        d1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d1KeyTyped(evt);
            }
        });

        d2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                d2FocusLost(evt);
            }
        });
        d2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d2KeyTyped(evt);
            }
        });

        d3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                d3FocusLost(evt);
            }
        });
        d3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d3KeyTyped(evt);
            }
        });

        s1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                s1KeyTyped(evt);
            }
        });

        s2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                s2KeyTyped(evt);
            }
        });

        s3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s3ActionPerformed(evt);
            }
        });
        s3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                s3KeyTyped(evt);
            }
        });

        jLabel6.setText("dd-mm-yyyy");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(a1, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                    .addComponent(a2)
                    .addComponent(a3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(d1)
                            .addComponent(d2)
                            .addComponent(d3))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel11))
                                .addGap(74, 74, 74))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(s2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(s1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(s3, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(42, 42, 42)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10)
                                .addComponent(jLabel14)
                                .addComponent(n1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(n2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(n3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(snotofication, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(snotofication, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(d1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(s1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(n1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(a1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(d2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(s2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(n2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(a2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(d3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(s3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(n3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(a3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 97, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ei, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nm, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(86, 86, 86))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(387, 387, 387)
                        .addComponent(jButton1)
                        .addGap(149, 149, 149)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(410, 410, 410)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1)
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(ei, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(nm, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void eiFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_eiFocusLost
        // TODO add your handling code here
          String emp1=null;
      String emp2=null;
      String emp3=null;
      String emp4=null;
        String qry="select * from employeedetail where emp_id='"+ei.getText().toString()+"'";
        ResultSet rs=obj.connection2(qry);
        try 
        {
            int a=0;
            while(rs.next())
            {
                a++;
                nm.setText(rs.getString(3));
                photo.setIcon(new ImageIcon("teacher//"+rs.getString(4)));
                h1=rs.getString(4);
                jTextArea2.setText(rs.getString(5));
             emp1=rs.getString(9);
             emp2=rs.getString(6);
             emp3=rs.getString(7);
             emp4=rs.getString(8);
            }
            
            
            
            String empj1[]=emp2.split(",");
            
             String empj[]=emp1.split(",");
             String empj2[]=emp3.split(",");
             String empj3[]=emp4.split(",");
             
             
             
             
             String nn1=empj[0];
             
             if(nn1.equals("null"))
             {
                 a1.setText("");
             }
             else
             {
                a1.setText(nn1);
             }
             
             
             String nn2=empj[1];
               if(nn2.equals("null"))
             {
                 a2.setText("");
             }
             else
             {
                a2.setText(nn2);
             }
             
               
                 String nn3=empj[2];
               if(nn3.equals("null"))
                    {
                        a3.setText("");
                    }
                    else
                    {
                       a3.setText(nn3);
                    }
              
              

               
               String dd1=empj1[0];
                  if(dd1.equals("null"))
                    {
                        d1.setText("");
                    }
                    else
                    {
                       d1.setText(dd1);
                    }
                  
                  
                  String dd2=empj1[1];
                  if(dd2.equals("null"))
                    {
                        d2.setText("");
                    }
                    else
                    {
                       d2.setText(dd2);
                    }
                  
                 String dd3=empj1[2];
                  if(dd3.equals("null"))
                    {
                        d3.setText("");
                    }
                    else
                    {
                       d3.setText(dd3);
                    }
                  
                  
                  
                  
                  
                     String ss1=empj2[0];
                  if(ss1.equals("null"))
                    {
                        s1.setText("");
                    }
                    else
                    {
                       s1.setText(ss1);
                    }
               
               
              
                      
                  
                     String ss2=empj2[1];
                  if(ss2.equals("null"))
                    {
                        s2.setText("");
                    }
                    else
                    {
                       s2.setText(ss2);
                    }
                  
                  
                  
                 String ss3=empj2[2];
                  if(ss3.equals("null"))
                    {
                        s3.setText("");
                    }
                    else
                    {
                       s3.setText(ss3);
                    }
                  
                    String aa1=empj3[0];
                  if(aa1.equals("null"))
                    {
                        n1.setText("");
                    }
                    else
                    {
                      n1.setText(aa1);
                    }
               
               
                    
                    String aa2=empj3[1];
                  if(aa2.equals("null"))
                    {
                        n2.setText("");
                    }
                    else
                    {
                      n2.setText(aa2);
                    }
               
                  
                String aa3=empj3[2];
                  if(aa3.equals("null"))
                    {
                        n3.setText("");
                    }
                    else
                    {
                      n3.setText(aa3);
                    }
               
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            if(a==0)
            {
                
                nm.setText("");
                photo.setIcon(new ImageIcon(""));
                jTextArea2.setText("");
                JOptionPane.showMessageDialog(null, "No Record found");
                
            }
        } 
        catch (Exception e)
        {
            System.out.println(e.getMessage());
        }
                  
    }//GEN-LAST:event_eiFocusLost

    private void d1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_d1FocusLost
        // TODO add your handling code here:

        try {

            if(DATE_PATTERN.matcher(d1.getText().toString()).matches())
            {

                int dt=Integer.parseInt(d1.getText().toString().substring(0,2));
                int mn=Integer.parseInt(d1.getText().toString().substring(3,5));
                int yr=Integer.parseInt(d1.getText().toString().substring(6,10));

                System.out.println(dt+"---"+mn+"---"+yr);

                LocalDate endofCentury = LocalDate.of(yr,mn,dt);
                LocalDate now = LocalDate.now();

                Period diff = Period.between(endofCentury, now);
                System.out.println(dt+"---"+mn+"---"+yr);

                System.out.printf("Difference is %d years, %d months and %d days old",
                    diff.getYears(), diff.getMonths(), diff.getDays());
                if(diff.getYears()<18)
                {

                }else{
                    JOptionPane.showMessageDialog(null, "Your are not within age limit");
                    d1.setText("");
                }

            }
            else
            {
                JOptionPane.showMessageDialog(null, "Please enter correct date like dd-mm-yyyy");
                d1.setText("");
            }
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Please enter proper Data within date bounds");
            d1.setText("");
        }

    }//GEN-LAST:event_d1FocusLost

    private void d1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d1KeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if((Character.isAlphabetic(c) ||(c==KeyEvent.VK_SPACE)))
        {
            evt.consume();

        }

    }//GEN-LAST:event_d1KeyTyped

    private void d2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_d2FocusLost
        // TODO add your handling code here:
        try {

            if(DATE_PATTERN.matcher(d2.getText().toString()).matches())
            {

                int dt=Integer.parseInt(d2.getText().toString().substring(0,2));
                int mn=Integer.parseInt(d2.getText().toString().substring(3,5));
                int yr=Integer.parseInt(d2.getText().toString().substring(6,10));

                System.out.println(dt+"---"+mn+"---"+yr);

                LocalDate endofCentury = LocalDate.of(yr,mn,dt);
                LocalDate now = LocalDate.now();

                Period diff = Period.between(endofCentury, now);
                System.out.println(dt+"---"+mn+"---"+yr);

                System.out.printf("Difference is %d years, %d months and %d days old",
                    diff.getYears(), diff.getMonths(), diff.getDays());
                if(diff.getYears()<18)
                {

                }else{
                    JOptionPane.showMessageDialog(null, "Your are not within age limit");
                    d1.setText("");
                }

            }
            else
            {
                JOptionPane.showMessageDialog(null, "Please enter correct date like dd-mm-yyyy");
                d2.setText("");
            }
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Please enter proper Data within date bounds");
            d2.setText("");
        }

    }//GEN-LAST:event_d2FocusLost

    private void d2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d2KeyTyped

        char c=evt.getKeyChar();
        if((Character.isAlphabetic(c) ||(c==KeyEvent.VK_SPACE)))
        {
            evt.consume();

        }        // TODO add your handling code here:
    }//GEN-LAST:event_d2KeyTyped

    private void d3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_d3FocusLost
        // TODO add your handling code here:
        try {

            if(DATE_PATTERN.matcher(d3.getText().toString()).matches())
            {

                int dt=Integer.parseInt(d3.getText().toString().substring(0,2));
                int mn=Integer.parseInt(d3.getText().toString().substring(3,5));
                int yr=Integer.parseInt(d3.getText().toString().substring(6,10));

                System.out.println(dt+"---"+mn+"---"+yr);

                LocalDate endofCentury = LocalDate.of(yr,mn,dt);
                LocalDate now = LocalDate.now();

                Period diff = Period.between(endofCentury, now);
                System.out.println(dt+"---"+mn+"---"+yr);

                System.out.printf("Difference is %d years, %d months and %d days old",
                    diff.getYears(), diff.getMonths(), diff.getDays());
                if(diff.getYears()<18)
                {

                }else{
                    JOptionPane.showMessageDialog(null, "Your are not within age limit");
                    d3.setText("");
                }

            }
            else
            {
                JOptionPane.showMessageDialog(null, "Please enter correct date like dd-mm-yyyy");
                d3.setText("");
            }
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Please enter proper Data within date bounds");
            d3.setText("");
        }

    }//GEN-LAST:event_d3FocusLost

    private void d3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d3KeyTyped
        char c=evt.getKeyChar();
        if((Character.isAlphabetic(c) ||(c==KeyEvent.VK_SPACE)))
        {
            evt.consume();

        }        // TODO add your handling code here:
    }//GEN-LAST:event_d3KeyTyped

    private void s1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_s1KeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if((Character.isAlphabetic(c) ||(c==KeyEvent.VK_SPACE) || (c==KeyEvent.VK_ALT)) || (c==KeyEvent.VK_AMPERSAND) || (c==KeyEvent.VK_MINUS) || c==KeyEvent.VK_MULTIPLY || c==KeyEvent.VK_SHIFT  ||c==KeyEvent.VK_COMMA)
        {
            evt.consume();
            snotofication.setText("*Enter only Characters");

        }
        else
        {
            snotofication.setText("");
        }
    }//GEN-LAST:event_s1KeyTyped

    private void s2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_s2KeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if((Character.isAlphabetic(c) ||(c==KeyEvent.VK_SPACE) || (c==KeyEvent.VK_ALT)) || (c==KeyEvent.VK_AMPERSAND) || (c==KeyEvent.VK_MINUS) || c==KeyEvent.VK_MULTIPLY || c==KeyEvent.VK_SHIFT  ||c==KeyEvent.VK_COMMA)
        {
            evt.consume();
            snotofication.setText("*Enter only Characters");

        }
        else
        {
            snotofication.setText("");
        }
    }//GEN-LAST:event_s2KeyTyped

    private void s3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_s3ActionPerformed

    private void s3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_s3KeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if((Character.isAlphabetic(c) ||(c==KeyEvent.VK_SPACE) || (c==KeyEvent.VK_ALT)) || (c==KeyEvent.VK_AMPERSAND) || (c==KeyEvent.VK_MINUS) || c==KeyEvent.VK_MULTIPLY || c==KeyEvent.VK_SHIFT  ||c==KeyEvent.VK_COMMA)
        {
            evt.consume();
            snotofication.setText("*Enter only Characters");

        }
        else
        {
            snotofication.setText("");
        }
    }//GEN-LAST:event_s3KeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(!s1.getText().toString().equals(""))
        {
            d=Integer.parseInt(s1.getText());
        }
        if(!s2.getText().toString().equals(""))
        {
            d=d+Integer.parseInt(s2.getText());
        }
        if(!s3.getText().toString().equals(""))
        {
            d=d+Integer.parseInt(s3.getText());
        }
        System.out.println(d);
        if(d==100)
        {
            count++;
            System.out.println(count);
        }
        else
        {
            count=0;
        }

        // TODO add your handling code here:
if(!d1.getText().equals(""))
      {
          empdata1=d1.getText()+",";
      }
       if(d1.getText().equals(""))
      {
          empdata1=null+",";
      }
        if(!d2.getText().equals(""))
      {
          empdata1=empdata1+d2.getText()+",";
      }
       if(d2.getText().equals(""))
      {
          empdata1=empdata1+null+",";
      }
          
       if(!d3.getText().equals(""))
      {
          empdata1=empdata1+d3.getText();
      }
       if(d3.getText().equals(""))
      {
          empdata1=empdata1+null+",";
      }
        System.out.println(empdata1);
       
        
         
       
       
       
       
       if(!s1.getText().equals(""))
      {
          empdata2=s1.getText()+",";
      }
       if(s1.getText().equals(""))
      {
          empdata2=null+",";
      }
        if(!s2.getText().equals(""))
      {
          empdata2=empdata2+s2.getText()+",";
      }
       if(s2.getText().equals(""))
      {
          empdata2=empdata2+null+",";
      }
          
       if(!s3.getText().equals(""))
      {
          empdata2=empdata2+s3.getText();
      }
       if(s3.getText().equals(""))
      {
          empdata2=empdata2+null+",";
      }
        System.out.println(empdata2);
     
     
     
     
     
     
     
     
     
       if(!n1.getText().equals(""))
      {
          empdata3=n1.getText()+",";
      }
       if(n1.getText().equals(""))
      {
          empdata3=null+",";
      }
        if(!n2.getText().equals(""))
      {
          empdata3=empdata3+n2.getText()+",";
      }
       if(n2.getText().equals(""))
      {
          empdata3=empdata3+null+",";
      }
          
       if(!n3.getText().equals(""))
      {
          empdata3=empdata3+n3.getText();
      }
       if(n3.getText().equals(""))
      {
          empdata3=empdata3+null+",";
      }
        System.out.println(empdata3);
        
        
        
        
        
         
       if(!a1.getText().equals(""))
      {
          empdata4=a1.getText()+",";
      }
       if(a1.getText().equals(""))
      {
          empdata4=null+",";
      }
        if(!a2.getText().equals(""))
      {
          empdata4=empdata4+a2.getText()+",";
      }
       if(a2.getText().equals(""))
      {
          empdata4=empdata4+null+",";
      }
          
       if(!a3.getText().equals(""))
      {
          empdata4=empdata4+a3.getText();
      }
       if(a3.getText().equals(""))
      {
          empdata4=empdata4+null+",";
      }
        System.out.println(empdata4);
         
        try {

            if(DATE_PATTERN.matcher(d1.getText().toString()).matches())
            {

                int dt=Integer.parseInt(d1.getText().toString().substring(0,2));
                int mn=Integer.parseInt(d1.getText().toString().substring(3,5));
                int yr=Integer.parseInt(d1.getText().toString().substring(6,10));

                System.out.println(dt+"---"+mn+"---"+yr);

                LocalDate endofCentury = LocalDate.of(yr,mn,dt);
                LocalDate now = LocalDate.now();

                Period diff = Period.between(endofCentury, now);
                System.out.println(dt+"---"+mn+"---"+yr);

                System.out.printf("Difference is %d years, %d months and %d days old",
                    diff.getYears(), diff.getMonths(), diff.getDays());
                if(diff.getYears()<18)
                {
                    set1++;

                }else{
                    JOptionPane.showMessageDialog(null, "Your are not within age limit");
                    d1.setText("");
                }

            }
            else
            {
                //JOptionPane.showMessageDialog(null, "Please enter correct date like dd-mm-yyyy");
                d1.setText("");
            }
        }
        catch (Exception e) {
            // JOptionPane.showMessageDialog(null,"Please enter proper Data within date bounds");
            d1.setText("");
        }

        try {

            if(DATE_PATTERN.matcher(d2.getText().toString()).matches())
            {

                int dt=Integer.parseInt(d2.getText().toString().substring(0,2));
                int mn=Integer.parseInt(d2.getText().toString().substring(3,5));
                int yr=Integer.parseInt(d2.getText().toString().substring(6,10));

                System.out.println(dt+"---"+mn+"---"+yr);

                LocalDate endofCentury = LocalDate.of(yr,mn,dt);
                LocalDate now = LocalDate.now();

                Period diff = Period.between(endofCentury, now);
                System.out.println(dt+"---"+mn+"---"+yr);

                System.out.printf("Difference is %d years, %d months and %d days old",
                    diff.getYears(), diff.getMonths(), diff.getDays());
                if(diff.getYears()<18)
                {
                    set2++;

                }else{
                    JOptionPane.showMessageDialog(null, "Your are not within age limit");
                    d2.setText("");
                }

            }

            else
            {
                // JOptionPane.showMessageDialog(null, "Please enter correct date like dd-mm-yyyy");
                d2.setText("");
            }
        }
        catch (Exception e) {
            //JOptionPane.showMessageDialog(null,"Please enter proper Data within date bounds");
            d2.setText("");
        }

        try {

            if(DATE_PATTERN.matcher(d3.getText().toString()).matches())
            {

                int dt=Integer.parseInt(d3.getText().toString().substring(0,2));
                int mn=Integer.parseInt(d3.getText().toString().substring(3,5));
                int yr=Integer.parseInt(d3.getText().toString().substring(6,10));

                System.out.println(dt+"---"+mn+"---"+yr);

                LocalDate endofCentury = LocalDate.of(yr,mn,dt);
                LocalDate now = LocalDate.now();

                Period diff = Period.between(endofCentury, now);
                System.out.println(dt+"---"+mn+"---"+yr);

                System.out.printf("Difference is %d years, %d months and %d days old",
                    diff.getYears(), diff.getMonths(), diff.getDays());
                if(diff.getYears()<18)
                {
                    set3++;

                }else{
                    JOptionPane.showMessageDialog(null, "Your are not within age limit");
                    d3.setText("");
                }

            }
            else
            {
                // JOptionPane.showMessageDialog(null, "Please enter correct date like dd-mm-yyyy");
                d3.setText("");
            }
        }
        catch (Exception e) {
            //JOptionPane.showMessageDialog(null,"Please enter proper Data within date bounds");
            d3.setText("");
        }

        if(!ei.getText().equals("") && ! nm.getText().equals("") && !jTextArea2.getText().equals("")  && !empdata2.equals("") &&  !empdata4.equals(""))
        {

            if(set1>0 && !a1.getText().equals("") && !d1.getText().equals("") && !s1.getText().equals("") && !n1.getText().equals("") || d1.getText().equals("") && n1.getText().equals("") && !s1.getText().equals("") && !a1.getText().equals("") ||  d1.getText().equals("") && n1.getText().equals("") && s1.getText().equals("") && a1.getText().equals(""))
            {
                if(set2>0 && !a2.getText().equals("") && !d2.getText().equals("") && !s2.getText().equals("") && !n2.getText().equals("") || a2.getText().equals("") && d2.getText().equals("") && s2.getText().equals("") && n2.getText().equals("") || d2.getText().equals("") && n2.getText().equals("") && !s2.getText().equals("") && !a2.getText().equals(""))
                {

                    if(set3>0 && !a3.getText().equals("") && !d3.getText().equals("") && !s3.getText().equals("") && !n3.getText().equals("") ||a3.getText().equals("") && d3.getText().equals("") && s3.getText().equals("") && n3.getText().equals("") || d3.getText().equals("") && n3.getText().equals("") && !s3.getText().equals("") && !a3.getText().equals(""))
                    {

                        if(count>0)
                        {

                            if(!ei.getText().equals("") && ! nm.getText().equals("") && !jTextArea2.getText().equals("")  && !empdata2.equals("") &&  !empdata4.equals(""))
                            {

                                String qry="select * from employeedetail where emp_id='"+ei.getText().toString()+"'";
                                ResultSet rs=obj.connection2(qry);
                                try
                                {
                                    int a12=0;
                                    while(rs.next())
                                    {
                                        a12++;
                                    }
                                    if(a12>0)
                                    {
                                        qry="";
                                        qry="update employeedetail set address='"+jTextArea2.getText()+"',dobicom ='"+empdata1+"',son='"+empdata2+"',other ='"+empdata3+"',naaop ='"+empdata4+"' where emp_id='"+ei.getText().toString()+"'";
                                        obj.connection(qry);
                                        JOptionPane.showMessageDialog(null, "Data succesfully updated");
                                        
                                        
                                                    
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        

                                    }
                                    if(a12==0)
                                    {
                                        JOptionPane.showMessageDialog(null, "Data of Emp id "+ei.getText()+" is not found");
                                    }
                                }
                                catch (Exception e)
                                {
                                    System.out.println(e.getMessage());
                                }

                            }
                            else
                            {
                                JOptionPane.showMessageDialog(null,"Please fill all the details");
                            }

                        }
                        else
                        {
                            JOptionPane.showMessageDialog(null, "enter proper value");
                        }

                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Please enter proper details");
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Please enter proper details");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Please enter proper details");
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please fill all the entries");
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(updateepd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(updateepd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(updateepd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(updateepd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new updateepd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField a1;
    private javax.swing.JTextField a2;
    private javax.swing.JTextField a3;
    private javax.swing.JTextField d1;
    private javax.swing.JTextField d2;
    private javax.swing.JTextField d3;
    private javax.swing.JTextField ei;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField n1;
    private javax.swing.JTextField n2;
    private javax.swing.JTextField n3;
    private javax.swing.JLabel nm;
    private javax.swing.JLabel photo;
    private javax.swing.JTextField s1;
    private javax.swing.JTextField s2;
    private javax.swing.JTextField s3;
    private javax.swing.JLabel snotofication;
    // End of variables declaration//GEN-END:variables
}
