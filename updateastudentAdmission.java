
import com.sun.glass.events.KeyEvent;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.time.LocalDate;
import java.time.Period;
import java.util.Random;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author dilpreet
 */
public class updateastudentAdmission extends javax.swing.JFrame {

    /**
     * Creates new form updateastudentAdmission
     */
    
    private static Pattern DATE_PATTERN = Pattern.compile( "^\\d{2}-\\d{2}-\\d{4}$");
     
     
     
    /**
     * Creates new form aStudentAdmission1
     */
     final static int IMG_WIDTH=100;
    final static int IMG_HEIGHT=100;
    String x="",photo="";
    String h;;
    JFileChooser jFileChooser1=new JFileChooser();
    public updateastudentAdmission() {
        initComponents();
    }
    clscon obj=new clscon();
    String rollno="";

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    
    private static BufferedImage resizeImage(BufferedImage originalImage, int type){
		BufferedImage resizedImage = new BufferedImage(IMG_WIDTH, IMG_HEIGHT, type);
		Graphics2D g = resizedImage.createGraphics();
		g.drawImage(originalImage, 0, 0, IMG_WIDTH, IMG_HEIGHT, null);
		g.dispose();
	return resizedImage;
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        dobnotification = new javax.swing.JLabel();
        fnnotification = new javax.swing.JLabel();
        mnnotification = new javax.swing.JLabel();
        rroll = new javax.swing.JLabel();
        clsnotification = new javax.swing.JLabel();
        semnotification = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        srn = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        sname = new javax.swing.JTextField();
        sdob = new javax.swing.JTextField();
        sfn = new javax.swing.JTextField();
        smn = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        sphoto = new javax.swing.JLabel();
        scls = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        nnotification = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        add = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rollo No", "Name", "Class"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        rroll.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Data of Birth");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Name");

        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Exit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("dd-mm-yyyy");

        sname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                snameKeyTyped(evt);
            }
        });

        sdob.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                sdobFocusLost(evt);
            }
        });
        sdob.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sdobKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sdobKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sdobKeyTyped(evt);
            }
        });

        sfn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sfnActionPerformed(evt);
            }
        });
        sfn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sfnKeyTyped(evt);
            }
        });

        smn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                smnKeyTyped(evt);
            }
        });

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 4, true));

        sphoto.setPreferredSize(new java.awt.Dimension(180, 180));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sphoto, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sphoto, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
        );

        scls.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please Select a Class" }));
        scls.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sclsItemStateChanged(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Father Name");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Mother Name");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Class");

        jButton3.setText("Upload Photo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Address");

        add.setColumns(20);
        add.setRows(5);
        jScrollPane2.setViewportView(add);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(221, 221, 221)
                .addComponent(jButton1)
                .addGap(163, 163, 163)
                .addComponent(jButton2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(326, 326, 326)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(158, 158, 158)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(119, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(153, 153, 153)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(clsnotification, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(semnotification, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(scls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4)
                                .addComponent(rroll, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(74, 74, 74)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(sdob, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(sname, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(nnotification, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(dobnotification, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(fnnotification, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(sfn, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(smn, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(mnnotification, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(srn, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addContainerGap(397, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addGap(1, 1, 1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(126, 126, 126)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel13)
                        .addGap(143, 143, 143)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(59, 59, 59))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rroll, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(srn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(nnotification, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(5, 5, 5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(sname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(dobnotification, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(8, 8, 8)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sdob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(46, 46, 46)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(sfn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(14, 14, 14)
                            .addComponent(fnnotification, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(10, 10, 10)
                    .addComponent(mnnotification, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(smn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(37, 37, 37)
                            .addComponent(jLabel8))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(13, 13, 13)
                            .addComponent(clsnotification, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(scls, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(18, 18, 18)
                    .addComponent(semnotification, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(283, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.out.println(photo);

        if(!srn.getText().equals("") && !sname.getText().equals("") && !sdob.getText().equals("") && !sfn.getText().equals("") && !smn.getText().equals("") && !scls.getSelectedItem().toString().equals("")  && !photo.equals("") && !add.getText().equals(""))
        {
         
         
            String qry="update tbstudentadmission set name='"+sname.getText().toString()+"',dob='"+sdob.getText().toString()+"',fn='"+sfn.getText().toString()+"',mn='"+smn.getText().toString()+"',class='"+scls.getSelectedItem().toString()+"',photo='"+photo.toString()+ "' ,Address ='"+add.getText().toString()+"' where rollno='"+srn.getText().toString()+"'";
            obj.connection(qry);
            JOptionPane.showMessageDialog(null, "Record Updated");
            String columnNames[]={"rollno","name","class"};
        
        DefaultTableModel model = new DefaultTableModel();

        model.setColumnIdentifiers(columnNames);

        



       
      


        String srollno = "";

        String sname= "";

        String sclass= "";

       clscon obj1=new clscon();
       qry="";
        qry="select * from tbstudentadmission";
       ResultSet rs=obj1.connection2(qry);
        try {
            int i=0;
            while(rs.next())
            {
                srollno = rs.getString("rollno");

                sname = rs.getString("name");

                sclass = rs.getString("class");

              
                model.addRow(new Object[]{srollno, sname,sclass});

                i++;
                
            }
            
            //con.close();
                rs.close();
                if (i < 1) {

                JOptionPane.showMessageDialog(null, "No Record Found", "Error", JOptionPane.ERROR_MESSAGE);

            }

            if (i == 1) {

                System.out.println(i + " Record Found");

            } else {

                System.out.println(i + " Records Found");

            }
              jTable1.setModel(model);
                
               System.out.println(i);
                
           
                
                
                
            
            
        } catch (Exception e)
        {
            
             JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            System.out.println(e.getMessage());
        }
        
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Record not updated");
        }
        

    }//GEN-LAST:event_jButton1ActionPerformed

    private void snameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_snameKeyTyped
        // TODO add your handling code here:

        char c=evt.getKeyChar();
        if(!(Character.isAlphabetic(c) ||(c==KeyEvent.VK_SPACE) ||(c==KeyEvent.VK_BACKSPACE) ))
        {
            evt.consume();
            nnotification.setText("*Enter only Characters");

        }
        else
        {
            nnotification.setText("");
        }
    }//GEN-LAST:event_snameKeyTyped

    private void sdobFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sdobFocusLost

        try {

            if(DATE_PATTERN.matcher(sdob.getText().toString()).matches())
            {

                int dt=Integer.parseInt(sdob.getText().toString().substring(0,2));
                int mn=Integer.parseInt(sdob.getText().toString().substring(3,5));
                int yr=Integer.parseInt(sdob.getText().toString().substring(6,10));

                System.out.println(dt+"---"+mn+"---"+yr);

                LocalDate endofCentury = LocalDate.of(yr,mn,dt);
                LocalDate now = LocalDate.now();

                Period diff = Period.between(endofCentury, now);
                System.out.println(dt+"---"+mn+"---"+yr);

                System.out.printf("Difference is %d years, %d months and %d days old",
                    diff.getYears(), diff.getMonths(), diff.getDays());
                if(diff.getYears()>=17){

                }else{
                    JOptionPane.showMessageDialog(null, "Your are not within age limit");
                    sdob.setText("");
                }

            }
            else
            {
                JOptionPane.showMessageDialog(null, "Please enter correct date like dd-mm-yyyy");
                sdob.setText("");
            }
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Please enter proper Data within date bounds");
            sdob.setText("");
        }

    }//GEN-LAST:event_sdobFocusLost

    private void sdobKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sdobKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_sdobKeyPressed

    private void sdobKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sdobKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_sdobKeyReleased

    private void sdobKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sdobKeyTyped

    }//GEN-LAST:event_sdobKeyTyped

    private void sfnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sfnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sfnActionPerformed

    private void sfnKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sfnKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if(!(Character.isAlphabetic(c) ||(c==KeyEvent.VK_SPACE) ||(c==KeyEvent.VK_BACKSPACE) ))
        {
            evt.consume();
            fnnotification.setText("*Enter only Charactes");

        }
        else
        {
            fnnotification.setText("");
        }
    }//GEN-LAST:event_sfnKeyTyped

    private void smnKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_smnKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if(!(Character.isAlphabetic(c) ||(c==KeyEvent.VK_SPACE) ||(c==KeyEvent.VK_BACKSPACE) ))
        {
            evt.consume();
            mnnotification.setText("*Enter ony Characters");

        }
        else
        {
            mnnotification.setText("");
        }
    }//GEN-LAST:event_smnKeyTyped

    private void sclsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sclsItemStateChanged
      /*  try{
            ssem.removeAllItems();
            String qry="select * from addclass where class_name='"+scls.getSelectedItem().toString()+"'";
            ResultSet rs=obj.connection2(qry);
            while(rs.next())
            {
                ssem.addItem(rs.getString(3).toString());
               
            }

        }catch(Exception e)
        {
            System.out.println(e.getMessage());

        }*/
    }//GEN-LAST:event_sclsItemStateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        try{

            int y=jFileChooser1.showOpenDialog(this);
            x=jFileChooser1.getSelectedFile().getAbsolutePath();
            System.out.println(x);

            String nm=jFileChooser1.getSelectedFile().getName();
            int l=nm.length();
            int l1=l-4;
            String x1=nm.substring(l1,l);
            String x2=nm.substring(0,l1);
            System.out.println(x);
            if(x1.equals(".jpg") || x1.equals(".JPG"))
            {

                BufferedImage originalImage = ImageIO.read(new File(x));
                int type = originalImage.getType() == 0? BufferedImage.TYPE_INT_ARGB : originalImage.getType();

                BufferedImage resizeImageJpg = resizeImage(originalImage, type);

                Random rd=new Random();
                int r=rd.nextInt(1000);
                ImageIO.write(resizeImageJpg, "jpg", new File("student\\"+x2+r+x1)); 
                    System.out.println("done");
                    sphoto.setText("");
                    sphoto.setSize(182,151);
                    
                    photo=x2+r+x1;
                    sphoto.setIcon(new ImageIcon("student\\"+x2+r+x1));
                    }else{
                        JOptionPane.showMessageDialog(null,"PLEASE SELECT .JPG FORMAT");
                    }
                }catch(IOException e){
                    System.out.println(e.getMessage());
                }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
       String columnNames[]={"rollno","name","class"};
        
        DefaultTableModel model = new DefaultTableModel();

        model.setColumnIdentifiers(columnNames);

        



       
      


        String srollno = "";

        String sname= "";

        String sclass= "";

       clscon obj=new clscon();
       String qry="select * from tbstudentadmission";
       ResultSet rs=obj.connection2(qry);
        try {
            int i=0;
            while(rs.next())
            {
                srollno = rs.getString("rollno");

                sname = rs.getString("name");

                sclass = rs.getString("class");

              
                model.addRow(new Object[]{srollno, sname,sclass});

                i++;
                
            }
            
            //con.close();
                rs.close();
                if (i < 1) {

                JOptionPane.showMessageDialog(null, "No Record Found", "Error", JOptionPane.ERROR_MESSAGE);

            }

            if (i == 1) {

                System.out.println(i + " Record Found");

            } else {

                System.out.println(i + " Records Found");

            }
              jTable1.setModel(model);
                
               System.out.println(i);
                
           
                
                
                
            
            
        } catch (Exception e) {
            
             JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            System.out.println(e.getMessage());
        }
        
        
        
       
                    try{
                        qry="";
                 qry="select  distinct class_name from addclass";
                ResultSet rs1=obj.connection2(qry);
                while(rs1.next()){
                      scls.addItem(rs1.getString(1).toString());
                      
                      
                      
                      
                }
                    }
                    catch(Exception e){
                System.out.println(e.getMessage());
            
            }
        
                
    }//GEN-LAST:event_formWindowOpened

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
       
        int r=jTable1.getSelectedRow();
        
        rroll.setText("Roll No");
        
        srn.setText(jTable1.getValueAt(r, 0).toString());
        
        
        int r1=jTable1.getSelectedRow();
        sname.setText(jTable1.getValueAt(r, 1).toString());
        int r2=jTable1.getSelectedRow();
        
        clscon obj=new clscon();
        String qry="select * from tbstudentadmission where rollno='"+jTable1.getValueAt(r, 0).toString()+"'";
        ResultSet rs=obj.connection2(qry);

      
            int i = 0;
           try {
             while(rs.next())
            {
               /* 

              
                photo="img";*/
                
                sname.setText(jTable1.getValueAt(r, 1).toString());
                sfn.setText(rs.getString(5));
                smn.setText(rs.getString(6));
                scls.setSelectedItem(rs.getString(7));
                add.setText(rs.getString(13));
                sphoto.setIcon(new ImageIcon("student//"+rs.getString(10)));
                h=rs.getString(10);
                sdob.setText(rs.getString(9));
                
                
                

                i++;
                qry="";
                qry="select * from studentfee where rollno='"+jTable1.getValueAt(r, 0).toString()+"'";
                ResultSet rs1=obj.connection2(qry);
              
                int a=0;
                while(rs1.next())
                {
                      
                    a++;
                    //ssem.setSelectedItem(rs.getString(4));
                
                 
                }
                
            }
          
           
               
           rs.close();
                
           
               
        } catch (Exception e)
        {
            System.out.println(e.getMessage());
        }

       
        
        
            
            
        
        
        
        
        
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(updateastudentAdmission.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(updateastudentAdmission.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(updateastudentAdmission.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(updateastudentAdmission.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new updateastudentAdmission().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea add;
    private javax.swing.JLabel clsnotification;
    private javax.swing.JLabel dobnotification;
    private javax.swing.JLabel fnnotification;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel mnnotification;
    private javax.swing.JLabel nnotification;
    private javax.swing.JLabel rroll;
    private javax.swing.JComboBox<String> scls;
    private javax.swing.JTextField sdob;
    private javax.swing.JLabel semnotification;
    private javax.swing.JTextField sfn;
    private javax.swing.JTextField smn;
    private javax.swing.JTextField sname;
    private javax.swing.JLabel sphoto;
    private javax.swing.JLabel srn;
    // End of variables declaration//GEN-END:variables
}
